"use strict";var _createClass=function(){function a(c,e){for(var g,f=0;f<e.length;f++)g=e[f],g.enumerable=g.enumerable||!1,g.configurable=!0,"value"in g&&(g.writable=!0),Object.defineProperty(c,g.key,g)}return function(c,e,f){return e&&a(c.prototype,e),f&&a(c,f),c}}();function _classCallCheck(a,c){if(!(a instanceof c))throw new TypeError("Cannot call a class as a function")}var vec2=function(){function a(){var c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;_classCallCheck(this,a),this.x=c,this.y=e}return _createClass(a,[{key:"normalized",value:function normalized(){var c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;return this.multiply(c/this.distance())}},{key:"inverted",value:function inverted(){return this.multiply(-1)}},{key:"multiply",value:function multiply(c){return new a(this.x*c,this.y*c)}},{key:"plus",value:function plus(c){return new a(this.x+c.x,this.y+c.y)}},{key:"minus",value:function minus(c){return this.plus(c.inverted())}},{key:"equals",value:function equals(c){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return Math.abs(this.x-c.x)<=e&&Math.abs(this.y-c.y)<=e}},{key:"direction",value:function direction(){return Math.atan2(this.y,this.x)}},{key:"distance",value:function distance(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;null===e&&(e=new a);var c=Math.sqrt(Math.pow(this.x-e.x,2)+Math.pow(this.y-e.y,2));return c}},{key:"toString",value:function toString(){return"<"+this.x+","+this.y+">"}}],[{key:"fromAng",value:function fromAng(c){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;return new a(Math.cos(c)*e,Math.sin(c)*e)}}]),a}(),polygon=function(){function a(){_classCallCheck(this,a),this.parent=null,this._points=[],this._position=new vec2,this._scale=1,this._rotation=0,this._absVerts=[],this._boundingbox=null,this._flipped=!1,this._rays=null}return _createClass(a,[{key:"getBoundingBox",value:function getBoundingBox(){return null==this._boundingBox&&this.updateBoundingBox(),this._boundingbox}},{key:"updateBoundingBox",value:function updateBoundingBox(){var c=this.getAbsVerts();if(1>c.length)return new box(this._position.x,this._position.y);for(var e=c[0].x,f=c[0].x,g=c[0].y,j=c[0].y,k=1;k<c.length;k+=1)e=Math.min(e,c[k].x),f=Math.max(f,c[k].x),g=Math.min(g,c[k].y),j=Math.max(j,c[k].y);this._boundingbox=new box(e,g,f-e,j-g)}},{key:"getAbsoluteVertices",value:function getAbsoluteVertices(){return null==this._absVerts&&this.updateAbsVerts(),this._absVerts}},{key:"getAbsVerts",value:function getAbsVerts(){return this.getAbsoluteVertices()}},{key:"updateAbsVerts",value:function updateAbsVerts(){this._absVerts=[];for(var e,c=0;c<this._points.length;c+=1){e=this._points[c],e.x*=this._flipped?-1:1;var f=e.direction(),g=e.distance();e=vec2.fromAng(f+this._rotation,g),e=e.multiply(this._scale),e=e.plus(this._position),this._absVerts.push(e)}this._rays=null,this.updateBoundingBox()}},{key:"setVerts",value:function setVerts(c){this._points=c,this.updateAbsVerts()}},{key:"getVerts",value:function getVerts(){return this._points}},{key:"move",value:function move(c){return this._position=this._position.plus(c),this._absVerts=null,this}},{key:"setPosition",value:function setPosition(c){return this._position=c,this._absVerts=null,this}},{key:"getPosition",value:function getPosition(){return this._position}},{key:"setScale",value:function setScale(c){return this._scale=c,this._absVerts=null,this}},{key:"getScale",value:function getScale(){return this._scale}},{key:"setRotation",value:function setRotation(c){return this._rotation=c,this._absVerts=null,this}},{key:"getRotation",value:function getRotation(){return this._rotation}},{key:"setFlipped",value:function setFlipped(){var c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:!0;this._flipped=c,this._absVerts=null}},{key:"getFlipped",value:function getFlipped(){return this._flipped}},{key:"getEdgeRays",value:function getEdgeRays(){return this._rays||ray.addPolygonRays(this),this._rays}},{key:"transform",value:function transform(c){for(var k=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,e=0;e<this._points.length;e+=1){var f=this._points[e],g=f.direction(),j=f.distance();f=vec2.fromAng(g+k,j),f=f.multiply(n),f=f.plus(c),this._points[e]=f}this._absVerts=null}},{key:"worldPointToLocal",value:function worldPointToLocal(c){var e=c;e=e.minus(this.getPosition()),e=e.multiply(1/this.getScale());var f=e.direction(),g=e.distance();return e=vec2.fromAng(f-this.getRotation(),g),e}},{key:"polygonIntersections",value:function polygonIntersections(c){if(!box.testOverlap(this.getBoundingBox(),c.getBoundingBox()))return[];for(var e=[],f=this.getEdgeRays(),g=c.getEdgeRays(),j=0;j<f.length;j+=1)e=e.concat(f[j].polygonCollision(c));return e}},{key:"drawOutline",value:function drawOutline(c){var j=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",k=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,e=this.getAbsVerts();if(!(2>e.length)){c.strokeStyle=j,c.lineWidth=k,c.beginPath(),c.moveTo(e[0].x,e[0].y);for(var g,f=0;f<e.length;f+=1)g=f+1,g>=e.length&&(g=0),c.lineTo(e[g].x,e[g].y);c.stroke()}}},{key:"drawFill",value:function drawFill(c){var j=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",e=this.getAbsVerts();if(!(3>e.length)){c.fillStyle=j,c.beginPath(),c.moveTo(e[0].x,e[0].y);for(var g,f=0;f<e.length;f+=1)g=f+1,g>=e.length&&(g=0),c.lineTo(e[g].x,e[g].y);c.fill()}}},{key:"toString",value:function toString(){return"polygon: "+this._points.toString()}}],[{key:"Rectangle",value:function Rectangle(c){var g=1<arguments.length&&void 0!==arguments[1]?arguments[1]:c,e=new a,f=[new vec2(c/-2,g/-2),new vec2(c/-2,g/2),new vec2(c/2,g/2),new vec2(c/2,g/-2)];return e.setVerts(f),e}},{key:"Circle",value:function Circle(c){for(var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:12,e=new a,f=[],g=0;g<n;g+=1){var j=g/n*(2*Math.PI),k=vec2.fromAng(j,c);f.push(k)}return e.setVerts(f),e}}]),a}(),box=function(){function a(){var c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,g=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;_classCallCheck(this,a),this.position=new vec2(c,e),this.size=new vec2(f,g)}return _createClass(a,[{key:"top",value:function top(){return this.position.y}},{key:"bottom",value:function bottom(){return this.position.y+this.size.y}},{key:"left",value:function left(){return this.position.x}},{key:"right",value:function right(){return this.position.x+this.size.x}},{key:"drawOutline",value:function drawOutline(c){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;c.strokeStyle=e,c.lineWidth=f,c.strokeRect(this.position.x,this.position.y,this.size.x,this.size.y)}},{key:"drawFill",value:function drawFill(c){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888";c.fillStyle=e,c.fillRect(this.position.x,this.position.y,this.size.x,this.size.y)}},{key:"containsPoint",value:function containsPoint(c){return c.x>=this.position.x&&c.x<=this.right()&&c.y>=this.position.y&&c.y<=this.bottom()}},{key:"testIntersect",value:function testIntersect(c){if(this.containsPoint(c.getPosition()))return!0;if(c._isVertical){var e=0<c._m?this.position.y:this.bottom();return c._origin.x>=this.position.x&&c._origin.x<=this.right()&&e<=c.length}var f=c.getEndPosition().x,g=Math.min(c._origin.x,f),j=Math.max(c._origin.x,f),k=c.getY(this.position.x);if(k>=this.position.y&&k<=this.bottom()&&g<=this.position.x&&this.position.x<=j)return!0;var n=c.getY(this.right());if(n>=this.position.y&&n<=this.bottom()&&g<=this.right()&&this.right()<=j)return!0;var o=c.getX(this.position.y);if(o>=this.position.x&&o<=this.right()&&g<=o&&o<=j)return!0;var q=c.getX(this.bottom());return q>=this.position.x&&q<=this.right()&&g<=q&&q<=j}},{key:"toString",value:function toString(){return"box: l:"+this.left()+" r:"+this.right()+" t:"+this.top()+" b:"+this.bottom()}}],[{key:"testOverlap",value:function testOverlap(c,e){return!(e.left()>c.right()||e.right()<c.left()||e.top()>c.bottom()||e.bottom()<c.top())}}]),a}(),ray=function(){function a(){var c=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new vec2,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,f=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Infinity;_classCallCheck(this,a),this.length=f,this._parentPoly=null,this._origin=c,this._m=0,this._b=0,this._isVertical=!1,this._angle=0,this.setAngle(e)}return _createClass(a,[{key:"getPosition",value:function getPosition(){return this._origin}},{key:"setPosition",value:function setPosition(c){this._origin=c,this.recalculate()}},{key:"getEndPosition",value:function getEndPosition(){var c=this.length;return c==Infinity&&(c=999999),this._origin.plus(vec2.fromAng(this._angle).multiply(c))}},{key:"setEndPosition",value:function setEndPosition(c){var e=this._origin.distance(c),f=c.minus(this._origin).direction();this.length=e,this._angle=f,this.recalculate()}},{key:"getAngle",value:function getAngle(){return this._angle}},{key:"setAngle",value:function setAngle(c){Math.abs(c)>Math.PI&&(c=-1*(c%Math.PI)),c==-Math.PI&&(c=Math.PI),this._angle=c,this.recalculate()}},{key:"getSlope",value:function getSlope(){return this._isVertical?this._m*Infinity:this._m}},{key:"getOffsetY",value:function getOffsetY(){return this._isVertical?-1*this._m*Infinity:this._b}},{key:"getY",value:function getY(c){return this._isVertical?c>=this.origin.x?this._m*Infinity:this._m*-Infinity:this._m*c+this._b}},{key:"getX",value:function getX(c){return 0===this._m?this._origin.y:(c-this._b)/this._m}},{key:"recalculate",value:function recalculate(){1e-7>=Math.abs(Math.abs(this._angle)-Math.PI/2)?(this._m=Math.sign(this._angle),this._b=0,this._isVertical=!0):(this._m=Math.tan(this._angle),this._b=this._origin.y-this._m*this._origin.x,this._isVertical=!1)}},{key:"intersection",value:function intersection(c){if(this._angle===c._angle||this.getPosition().distance(c.getPosition())>this.length+c.length)return null;if(this._isVertical)return this.intersect_vertical(c);if(c._isVertical)return c.intersect_vertical(this);var e=new vec2;if(e.x=(c._b-this._b)/(this._m-c._m),e.y=this._m*e.x+this._b,e.distance(this._origin)>this.length)return null;if(e.distance(c._origin)>c.length)return null;var f=Math.abs(this._angle)<Math.PI/2?1:-1,g=Math.sign(e.x-this._origin.x);if(f!=g)return null;var j=Math.abs(c._angle)<Math.PI/2?1:-1;return g=Math.sign(e.x-c._origin.x),j==g?e:null}},{key:"intersect_vertical",value:function intersect_vertical(c){if(c._isVertical)return null;var e=new vec2;e.x=this._origin.x,e.y=c.getY(e.x);var f=Math.sign(this._m),g=Math.sign(e.y-this._origin.y);if(f!=g)return null;var j=e.distance(this._origin);if(j>this.length)return null;var k=e.distance(c._origin);return k>c.length?null:e}},{key:"polygonCollision",value:function polygonCollision(c){if(!c.getBoundingBox().testIntersect(this))return[];for(var g,e=[],f=0;f<c.getEdgeRays().length;f+=1)g=this.intersection(c._rays[f]),null!=g&&e.push(new rayCollision(g,this,c._rays[f],c,f));return e}},{key:"rayCast",value:function rayCast(c){for(var e=[],f=0;f<c.length;f+=1)e=e.concat(this.polygonCollision(c[f]));return e}},{key:"draw",value:function draw(c){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#f00",g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;c.strokeStyle=f,c.lineWidth=2*g,c.beginPath(),c.moveTo(this.getPosition().x,this.getPosition().y);var e=this.getPosition().plus(vec2.fromAng(this.getAngle(),this.length/4));c.lineTo(e.x,e.y),c.stroke(),c.lineWidth=g,c.beginPath(),c.moveTo(this.getPosition().x,this.getPosition().y);var e=this.getEndPosition();c.lineTo(e.x,e.y),c.stroke()}}],[{key:"addPolygonRays",value:function addPolygonRays(c){var e=c.getAbsoluteVertices();c._rays=[];for(var g,f=0;f<e.length;f+=1)g=f+1,g>=e.length&&(g=0),c._rays.push(a.fromPoints(e[f],e[g]))}},{key:"rayData",value:function rayData(c,e){var g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Infinity,f=new a;return f._angle=null,f._m=c,f._b=e,f.length=g,f._origin=new vec2,f}},{key:"fromPoints",value:function fromPoints(c,e){var f=e.minus(c).direction(),g=e.distance(c),j=new a(c,f,g);return j}}]),a}(),rayCollision=function a(c){var e=1<arguments.length&&arguments[1]!==void 0?arguments[1]:null,f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null,g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null,j=4<arguments.length&&arguments[4]!==void 0?arguments[4]:null;_classCallCheck(this,a),this.polygonTarget=g,this.rayCasted=e,this.rayTarget=f,this.intersection=c,this.vertexIndex=j};function wrapValue(a,c){return 0>a?c+a%c:a>=c?a%c:a}