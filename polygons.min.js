"use strict";var _createClass=function(){function c(e,f){for(var j,g=0;g<f.length;g++)j=f[g],j.enumerable=j.enumerable||!1,j.configurable=!0,"value"in j&&(j.writable=!0),Object.defineProperty(e,j.key,j)}return function(e,f,g){return f&&c(e.prototype,f),g&&c(e,g),e}}();function _classCallCheck(c,e){if(!(c instanceof e))throw new TypeError("Cannot call a class as a function")}var enumBooleanOp={union:0,difference:1,intersect:2,xor:3},vec2=function(){function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;_classCallCheck(this,c),this.x=e,this.y=f}return _createClass(c,[{key:"normalized",value:function normalized(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;return this.multiply(e/this.distance())}},{key:"inverted",value:function inverted(){return this.multiply(-1)}},{key:"multiply",value:function multiply(e){return new c(this.x*e,this.y*e)}},{key:"plus",value:function plus(e){return new c(this.x+e.x,this.y+e.y)}},{key:"minus",value:function minus(e){return this.plus(e.inverted())}},{key:"equals",value:function equals(e){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return Math.abs(this.x-e.x)<=f&&Math.abs(this.y-e.y)<=f}},{key:"direction",value:function direction(){return Math.atan2(this.y,this.x)}},{key:"directionTo",value:function directionTo(e){return e.minus(this).direction()}},{key:"distance",value:function distance(){var f=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;null===f&&(f=new c);var e=Math.sqrt(Math.pow(this.x-f.x,2)+Math.pow(this.y-f.y,2));return e}},{key:"clone",value:function clone(){return new c(this.x,this.y)}},{key:"toAnonObj",value:function toAnonObj(){return{x:this.x,y:this.y}}},{key:"toString",value:function toString(){return"<"+this.x+","+this.y+">"}}],[{key:"average",value:function average(){for(var g=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],e=new c,f=g.length-1;0<=f;f--)e=e.plus(g[f]);return e=e.multiply(1/g.length),e}},{key:"fromAnonObj",value:function fromAnonObj(e){return new c(e.x,e.y)}},{key:"fromAng",value:function fromAng(e){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;return new c(Math.cos(e)*f,Math.sin(e)*f)}}]),c}(),polygon=function(){function c(){_classCallCheck(this,c),this.parent=null,this._points=[],this._position=new vec2,this._scale=1,this._rotation=0,this._absVerts=[],this._boundingbox=null,this._flipped=!1,this._rays=null}return _createClass(c,[{key:"getBoundingBox",value:function getBoundingBox(){return null==this._boundingBox&&this.updateBoundingBox(),this._boundingbox}},{key:"updateBoundingBox",value:function updateBoundingBox(){var e=this.getAbsVerts();if(1>e.length)return new box(this._position.x,this._position.y);for(var f=e[0].x,g=e[0].x,j=e[0].y,n=e[0].y,o=1;o<e.length;o+=1)f=Math.min(f,e[o].x),g=Math.max(g,e[o].x),j=Math.min(j,e[o].y),n=Math.max(n,e[o].y);this._boundingbox=new box(f,j,g-f,n-j)}},{key:"getAbsoluteVertices",value:function getAbsoluteVertices(){return null==this._absVerts&&this.updateAbsVerts(),this._absVerts}},{key:"getAbsVerts",value:function getAbsVerts(){return this.getAbsoluteVertices()}},{key:"updateAbsVerts",value:function updateAbsVerts(){this._absVerts=[];for(var f,e=0;e<this._points.length;e++){f=this._points[e],f.x*=this._flipped?-1:1;var g=f.direction(),j=f.distance();f=vec2.fromAng(g+this._rotation,j),f=f.multiply(this._scale),f=f.plus(this._position),this._absVerts.push(f)}this._rays=null,this.updateBoundingBox()}},{key:"setVerts",value:function setVerts(e){this._points=e,this.updateAbsVerts()}},{key:"getVerts",value:function getVerts(){return this._points}},{key:"setAbsVerts",value:function setAbsVerts(e){this._points=[];for(var g,f=0;f<e.length;f++){g=e[f],g=g.plus(this._position.inverted()),g=g.multiply(1/this._scale);var j=g.direction(),n=g.distance();g=vec2.fromAng(j-this._rotation,n),g.x*=this._flipped?-1:1,this._points.push(g)}this._absVerts=null,this._rays=null,console.log(this._points)}},{key:"transformPoints",value:function transformPoints(e){for(var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,q=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,f=0;f<this._points.length;f+=1){var g=this._points[f],j=g.direction(),n=g.distance();g=vec2.fromAng(j+q,n),g=g.multiply(o),g=g.plus(e),this._points[f]=g}this._absVerts=null}},{key:"flipPoints",value:function flipPoints(){for(var f,g=0<arguments.length&&void 0!==arguments[0]?arguments[0]:!0,j=1<arguments.length&&void 0!==arguments[1]&&arguments[1],e=0;e<this._points.length;e+=1)f=this._points[e],g&&(f.x*=-1),j&&(f.y*=-1),this._points[e]=f;this._absVerts=null}},{key:"movePos",value:function movePos(e){return this._position=this._position.plus(e),this._absVerts=null,this}},{key:"setPos",value:function setPos(e){return this._position=e,this._absVerts=null,this}},{key:"getPos",value:function getPos(){return this._position}},{key:"setScale",value:function setScale(e){return this._scale=e,this._absVerts=null,this}},{key:"getScale",value:function getScale(){return this._scale}},{key:"setRot",value:function setRot(e){return this._rotation=e,this._absVerts=null,this}},{key:"getRot",value:function getRot(){return this._rotation}},{key:"setFlipped",value:function setFlipped(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:!0;this._flipped=e,this._absVerts=null}},{key:"getFlipped",value:function getFlipped(){return this._flipped}},{key:"getEdgeRays",value:function getEdgeRays(){return this._rays||ray.addPolygonRays(this),this._rays}},{key:"containsPoint",value:function containsPoint(e){var j=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0.01;if(!this.getBoundingBox().containsPoint(e))return!1;var f=new ray(e,j),g=f.polygonIntersections(this);return 1==g.length%2}},{key:"worldPointToLocal",value:function worldPointToLocal(e){var f=e;f=f.minus(this.getPos()),f=f.multiply(1/this.getScale());var g=f.direction(),j=f.distance();return f=vec2.fromAng(g-this.getRotation(),j),f}},{key:"polygonIntersections",value:function polygonIntersections(e){if(!box.testOverlap(this.getBoundingBox(),e.getBoundingBox()))return[];for(var f=[],g=this.getEdgeRays(),j=e.getEdgeRays(),n=0;n<g.length;n+=1)f=f.concat(g[n].polygonCollision(e));return f}},{key:"drawOutline",value:function drawOutline(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,f=this.getAbsVerts();if(!(2>f.length)){e.strokeStyle=n,e.lineWidth=o,e.beginPath(),e.moveTo(f[0].x,f[0].y);for(var j,g=0;g<f.length;g+=1)j=g+1,j>=f.length&&(j=0),e.lineTo(f[j].x,f[j].y);e.stroke()}}},{key:"drawFill",value:function drawFill(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",f=this.getAbsVerts();if(!(3>f.length)){e.fillStyle=n,e.beginPath(),e.moveTo(f[0].x,f[0].y);for(var j,g=0;g<f.length;g+=1)j=g+1,j>=f.length&&(j=0),e.lineTo(f[j].x,f[j].y);e.fill()}}},{key:"toString",value:function toString(){return"polygon: "+this._points.toString()}}],[{key:"Rectangle",value:function Rectangle(e){var j=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e,f=new c,g=[new vec2(e/-2,j/-2),new vec2(e/-2,j/2),new vec2(e/2,j/2),new vec2(e/2,j/-2)];return f.setVerts(g),f}},{key:"Circle",value:function Circle(e){for(var q=1<arguments.length&&void 0!==arguments[1]?arguments[1]:12,f=new c,g=[],j=0;j<q;j+=1){var n=j/q*(2*Math.PI),o=vec2.fromAng(n,e);g.push(o)}return f.setVerts(g),f}}]),c}(),box=function(){function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,j=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;_classCallCheck(this,c),this.position=new vec2(e,f),this.size=new vec2(g,j)}return _createClass(c,[{key:"top",value:function top(){return this.position.y}},{key:"bottom",value:function bottom(){return this.position.y+this.size.y}},{key:"left",value:function left(){return this.position.x}},{key:"right",value:function right(){return this.position.x+this.size.x}},{key:"topLeft",value:function topLeft(){return this.position}},{key:"bottomRight",value:function bottomRight(){return this.position.plus(this.size)}},{key:"center",value:function center(){return new vec2((this.left()+this.right())/2,(this.top()+this.bottom())/2)}},{key:"drawOutline",value:function drawOutline(e){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888",g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;e.strokeStyle=f,e.lineWidth=g,e.strokeRect(this.position.x,this.position.y,this.size.x,this.size.y)}},{key:"drawFill",value:function drawFill(e){var f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#888";e.fillStyle=f,e.fillRect(this.position.x,this.position.y,this.size.x,this.size.y)}},{key:"extended",value:function extended(e){var f=Math.max(this.left(),this.right(),e.left(),e.right()),g=Math.max(this.top(),this.bottom(),e.top(),e.bottom()),j=Math.min(this.left(),this.right(),e.left(),e.right()),n=Math.min(this.top(),this.bottom(),e.top(),e.bottom());return c.fromSides(j,f,n,g)}},{key:"containsPoint",value:function containsPoint(e){return e.x>=this.position.x&&e.x<=this.right()&&e.y>=this.position.y&&e.y<=this.bottom()}},{key:"testIntersect",value:function testIntersect(e){if(this.containsPoint(e.getPos()))return!0;if(e._isVertical){var f=0<e._m?this.position.y:this.bottom();return e._origin.x>=this.position.x&&e._origin.x<=this.right()&&f<=e.length}var g=e.getEndPos().x,j=Math.min(e._origin.x,g),n=Math.max(e._origin.x,g),o=e.getY(this.position.x);if(o>=this.position.y&&o<=this.bottom()&&j<=this.position.x&&this.position.x<=n)return!0;var q=e.getY(this.right());if(q>=this.position.y&&q<=this.bottom()&&j<=this.right()&&this.right()<=n)return!0;var s=e.getX(this.position.y);if(s>=this.position.x&&s<=this.right()&&j<=s&&s<=n)return!0;var u=e.getX(this.bottom());return u>=this.position.x&&u<=this.right()&&j<=u&&u<=n}},{key:"toString",value:function toString(){return"box: l:"+this.left()+" r:"+this.right()+" t:"+this.top()+" b:"+this.bottom()}}],[{key:"testOverlap",value:function testOverlap(e,f){return!(f.left()>e.right()||f.right()<e.left()||f.top()>e.bottom()||f.bottom()<e.top())}},{key:"fromSides",value:function fromSides(e,f,g,j){return new c(e,g,f-e,j-g)}}]),c}(),ray=function(){function c(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:new vec2,f=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Infinity;_classCallCheck(this,c),this.length=g,this._parentPoly=null,this._origin=e,this._m=0,this._b=0,this._isVertical=!1,this._angle=0,this.setAngle(f)}return _createClass(c,[{key:"getPos",value:function getPos(){return this._origin}},{key:"setPos",value:function setPos(e){this._origin=e,this.recalculate()}},{key:"getEndPos",value:function getEndPos(){var e=this.length;return e==Infinity&&(e=999999),this._origin.plus(vec2.fromAng(this._angle).multiply(e))}},{key:"setEndPos",value:function setEndPos(e){var f=this._origin.distance(e),g=e.minus(this._origin).direction();this.length=f,this._angle=g,this.recalculate()}},{key:"getAngle",value:function getAngle(){return this._angle}},{key:"setAngle",value:function setAngle(e){Math.abs(e)>Math.PI&&(e=-1*(e%Math.PI)),e==-Math.PI&&(e=Math.PI),this._angle=e,this.recalculate()}},{key:"getSlope",value:function getSlope(){return this._isVertical?this._m*Infinity:this._m}},{key:"getOffsetY",value:function getOffsetY(){return this._isVertical?-1*this._m*Infinity:this._b}},{key:"getY",value:function getY(e){return this._isVertical?e>=this.origin.x?this._m*Infinity:this._m*-Infinity:this._m*e+this._b}},{key:"getX",value:function getX(e){return 0===this._m?this._origin.y:(e-this._b)/this._m}},{key:"isHorizontal",value:function isHorizontal(){return 0===this._m}},{key:"recalculate",value:function recalculate(){1e-7>=Math.abs(Math.abs(this._angle)-Math.PI/2)?(this._m=Math.sign(this._angle),this._b=0,this._isVertical=!0):(this._m=Math.tan(this._angle),this._b=this._origin.y-this._m*this._origin.x,this._isVertical=!1)}},{key:"containsPoint",value:function containsPoint(e){var g=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0.01;if(e.distance(this.getPos())>this.length)return!1;var f=this._origin.directionTo(e);return Math.abs(f-this.getAngle())<=g}},{key:"intersection",value:function intersection(e){if(this._angle===e._angle||this.getPos().distance(e.getPos())>this.length+e.length)return null;if(this._isVertical)return this.intersect_vertical(e);if(e._isVertical)return e.intersect_vertical(this);var f=new vec2;return f.x=(e._b-this._b)/(this._m-e._m),f.y=this._m*f.x+this._b,this._intersectRayCheck(f,e)?f:null}},{key:"intersect_vertical",value:function intersect_vertical(e){if(e._isVertical)return null;var f=new vec2;return e.isHorizontal()?(f.x=this._origin.x,f.y=e._origin.y):(f.x=this._origin.x,f.y=e.getY(f.x)),this._intersectRayCheck(f,e)?f:null}},{key:"intersect_horizontal",value:function intersect_horizontal(e){if(e.isHorizontal())return null;var f=new vec2;return e.isVertical()?(f.y=this._origin.y,f.x=e._origin.x):(f.y=this._origin.y,f.x=e.getX(f.y)),this._intersectRayCheck(f,e)?f:null}},{key:"_intersectRayCheck",value:function _intersectRayCheck(e,f){return this.containsPoint(e)&&f.containsPoint(e)}},{key:"polygonIntersections",value:function polygonIntersections(e){if(!e.getBoundingBox().testIntersect(this))return[];for(var j,f=[],g=0;g<e.getEdgeRays().length;g+=1)j=this.intersection(e._rays[g]),null!=j&&f.push(new rayCollision(j,this,e._rays[g],e,g));return f}},{key:"rayCast",value:function rayCast(e){for(var f=[],g=0;g<e.length;g+=1)f=f.concat(this.polygonCollision(e[g]));return f}},{key:"draw",value:function draw(e){var g=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#f00",j=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;e.strokeStyle=g,e.lineWidth=j,e.beginPath(),e.moveTo(this.getPos().x,this.getPos().y);var f=this.getEndPos();e.lineTo(f.x,f.y),e.stroke()}},{key:"drawDebug",value:function drawDebug(e){var g=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"#f00",j=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;e.lineWidth=2*j,e.beginPath(),e.moveTo(this.getPos().x,this.getPos().y);var f=this.getPos().plus(vec2.fromAng(this.getAngle(),this.length/4));e.lineTo(f.x,f.y),e.stroke(),this.draw(e,g,j)}}],[{key:"addPolygonRays",value:function addPolygonRays(e){var f=e.getAbsoluteVertices();e._rays=[];for(var j,g=0;g<f.length;g+=1){j=g+1,j>=f.length&&(j=0);var n=c.fromPoints(f[g],f[j]);n._parentPoly=e,e._rays.push(n)}}},{key:"rayData",value:function rayData(e,f){var j=2<arguments.length&&void 0!==arguments[2]?arguments[2]:Infinity,g=new c;return g._angle=null,g._m=e,g._b=f,g.length=j,g._origin=new vec2,g}},{key:"fromPoints",value:function fromPoints(e,f){var g=f.minus(e).direction(),j=f.distance(e),n=new c(e,g,j);return n}}]),c}(),rayCollision=function c(e){var f=1<arguments.length&&arguments[1]!==void 0?arguments[1]:null,g=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null,j=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null,n=4<arguments.length&&arguments[4]!==void 0?arguments[4]:null;_classCallCheck(this,c),this.polygonTarget=j,this.rayCasted=f,this.rayTarget=g,this.intersection=e,this.vertexIndex=n},booleanOperation=function(){function c(e,f){var g=2<arguments.length&&void 0!==arguments[2]?arguments[2]:enumBooleanOp.union;_classCallCheck(this,c),this.subject=e,this.mask=f,this.operation=g}return _createClass(c,[{key:"getResult",value:function getResult(){switch(this.operation){case enumBooleanOp.union:return c.union(this.subject,this.mask);case enumBooleanOp.difference:return c.difference(this.subject,this.mask);case enumBooleanOp.intersect:return c.intersect(this.subject,this.mask);case enumBooleanOp.xor:return c.xor(this.subject,this.mask);}}}],[{key:"union_plus",value:function union_plus(e,f){var g=new polygon,j=[],n=e.getBoundingBox().extended(f.getBoundingBox()),o=ray.fromPoints(n.topLeft(),n.bottomRight()),q=o.polygonIntersections(e).concat(o.polygonIntersections(f));q.sort(function(F,G){return F.intersection.distance(o.getPos())-G.intersection.distance(o.getPos())});var s=q[0],u=s.vertexIndex,z=s.rayTarget._parentPoly.getAbsVerts(),A=s.rayTarget._parentPoly==e?f:e,B=wrapValue(u+1,z.length),C=ray.fromPoints(s.intersection,z[B]),D=C.polygonIntersections(A);D.sort(function(F,G){return F.intersection.distance(C.getPos())-G.intersection.distance(C.getPos())}),D=0<D.length?D[0]:null;var E=0;do console.log(E),D?(z=A.getAbsVerts(),A=A==e?f:e,u=D.vertexIndex,B=wrapValue(u+1,z.length),C=ray.fromPoints(D.intersection,z[B])):(u=wrapValue(u+1,z.length),B=wrapValue(B+1,z.length),C=ray.fromPoints(z[u],z[B])),j.push(C.getPos().clone()),D=C.polygonIntersections(A),D.sort(function(F,G){return F.intersection.distance(C.getPos())-G.intersection.distance(C.getPos())}),D=0<D.length?D[0]:null,D&&(C.length=D.intersection.distance(C.getPos())),E++;while(!C.containsPoint(s.intersection)&&1e3>E);return j.push(z[u]),g.setVerts(j),g}},{key:"union",value:function union(e,f){for(var g=new polygon,j=f.getAbsVerts(),n=e.getAbsVerts(),o=null,q=null,s=null,u=null,z=null,A=null,B=0;e.containsPoint(j[B]);)B++;for(var C=j.length-1;0<=C;C--){var D=wrapValue(B+C,j.length),E=wrapValue(D-1,j.length),F=j[D],G=j[E],H=ray.fromPoints(j[D],j[E]),I=H.polygonIntersections(e);I.sort(function(M,N){return M.intersection.distance(H.getPos())-N.intersection.distance(H.getPos())}),0<I.length&&(!s&&(o=I[0].intersection,s=D,z=I[0].vertexIndex),q=I[I.length-1].intersection,A=wrapValue(I[I.length-1].vertexIndex+1,n.length),u=D)}for(var J=[o],C=s;C!=wrapValue(u,j.length);C=wrapValue(C+1,j.length))J.push(j[C]);J.push(q);for(var K=[],C=A;C!=z;C=wrapValue(C+1,n.length))K.push(n[C]);K.push(n[z]);for(var L=[],C=0;C<J.length;C++)L.push(J[C].clone());for(var C=0;C<K.length;C++)L.push(K[C].clone());return g.setVerts(L),g}},{key:"difference",value:function difference(){var g=new polygon;return g}},{key:"intersect",value:function intersect(){var g=new polygon;return g}},{key:"xor",value:function xor(){var g=new polygon;return g}}]),c}();function wrapValue(c,e){return 0>c?e+c%e:c>=e?c%e:c}